require "main_menu.ui_func"
require "variables"

local is_animation_end = true

function init(self)
	gui.set_enabled(gui.get_node("background"), false)

	self.hovered_node = nil
	self.picked_node = nil

	self.nodes = {
		{
			node = gui.get_node("close_button"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					msg.post(".", "hide")
				end
			end
		},
		{
			node = gui.get_node("skins_button"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					--msg.post(".", "hide")
				end
			end
		},
		{
			node = gui.get_node("boxes_button"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					--msg.post(".", "hide")
				end
			end
		},
		{
			node = gui.get_node("skin_button1"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					if skins.shop[1] then
						gui.set_text(gui.get_node("price_text"..skins.type), "Select")
						skins.type = 1
						gui.set_text(gui.get_node("price_text1"), "Selected")
					else
						coins = coins - skins.cost[1]
						skins.shop[1] = true
						gui.set_text(gui.get_node("coins_num"), coins)
						gui.set_text(gui.get_node("price_text1"), "Select")
					end
				end
			end
		},
		{
			node = gui.get_node("skin_button2"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					if skins.shop[2] then
						gui.set_text(gui.get_node("price_text"..skins.type), "Select")
						skins.type = 2
						gui.set_text(gui.get_node("price_text"..skins.type), "Selected")
					else
						coins = coins - skins.cost[2]
						skins.shop[2] = true
						gui.set_text(gui.get_node("coins_num"), coins)
						gui.set_text(gui.get_node("price_text2"), "Select")
					end
				end
			end
		},
		{
			node = gui.get_node("skin_button3"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					if skins.shop[3] then
						gui.set_text(gui.get_node("price_text"..skins.type), "Select")
						skins.type = 3
						gui.set_text(gui.get_node("price_text"..skins.type), "Selected")
					else
						coins = coins - skins.cost[3]
						skins.shop[3] = true
						gui.set_text(gui.get_node("coins_num"), coins)
						gui.set_text(gui.get_node("price_text3"), "Select")
					end
				end
			end
		},
		{
			node = gui.get_node("left_button"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					pos = gui.get_position(gui.get_node("skin_windows"))

					if pos.x ~= 0 then
						if is_animation_end then
							is_animation_end = false
							gui.animate(gui.get_node("skin_windows"), "position.x", gui.get_position(gui.get_node("skin_windows"))+vmath.vector3(300,0,0), gui.EASING_INCUBIC, 0.5, 0, function () is_animation_end = true end, gui.PLAYBACK_ONCE_FORWARD)
						end
					end
				end
			end
		},
		{
			node = gui.get_node("right_button"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					pos = gui.get_position(gui.get_node("skin_windows"))

					if pos.x > -300 * (#skins.names - 4) then
						if is_animation_end then
							is_animation_end = false
							gui.animate(gui.get_node("skin_windows"), "position.x", gui.get_position(gui.get_node("skin_windows"))-vmath.vector3(300,0,0), gui.EASING_INCUBIC, 0.5, 0, function () is_animation_end = true end, gui.PLAYBACK_ONCE_FORWARD)
						end
					end
				end
			end
		},
		{
			node = gui.get_node("diamonds_box"),
			action = function ()
				if not gui.is_enabled(gui.get_node("donate_window")) then
					gui.set_enabled(gui.get_node("donate_window"), true)
					gui.animate(gui.get_node("donate_window"), "position.y", 640, gui.EASING_INCUBIC, 0.5, 0, nil, gui.PLAYBACK_ONCE_BACKWARD)
					--gui.show_keyboard(gui.KEYBOARD_TYPE_DEFAULT, true)
				end
			end
		},
		{
			node = gui.get_node("donate_button"),
			action = function ()
				if gui.is_enabled(gui.get_node("donate_window")) then
					diamonds = diamonds + 1
					gui.set_text(gui.get_node("diamonds_num"), diamonds)
				end
			end
		},
		{
			node = gui.get_node("donate_button1"),
			action = function ()
				if gui.is_enabled(gui.get_node("donate_window")) then
					diamonds = diamonds + 10
					gui.set_text(gui.get_node("diamonds_num"), diamonds)
				end
			end
		},
		{
			node = gui.get_node("donate_button2"),
			action = function ()
				if gui.is_enabled(gui.get_node("donate_window")) then
					diamonds = diamonds + 50
					gui.set_text(gui.get_node("diamonds_num"), diamonds)
				end
			end
		},
		{
			node = gui.get_node("donate_button3"),
			action = function ()
				if gui.is_enabled(gui.get_node("donate_window")) then
					diamonds = diamonds + 100
					gui.set_text(gui.get_node("diamonds_num"), diamonds)
				end
			end
		},
		{
			node = gui.get_node("back_button"),
			action = function ()
				if gui.is_enabled(gui.get_node("donate_window")) then
					gui.animate(gui.get_node("donate_window"), "position.y", -450, gui.EASING_INCUBIC, 0.5, 0, gui.set_enabled(gui.get_node("donate_window"), false), gui.PLAYBACK_ONCE_FORWARD)
				end
			end
		},
	}

	--init_ui(self)
end

--[[function finish_anim(node)
	gui.animate(node, "position.y", -150, gui.EASING_INCUBIC, 0.5, 0, nil, gui.PLAYBACK_ONCE_FORWARD)
end]]

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		gui.set_position(gui.get_node("background"), vmath.vector3(640, 360, 0))
		gui.set_position(gui.get_node("skin_windows"), vmath.vector3(0, 0, 0))

		--[[for i = 1, #skins_cost do
			gui.set_text(gui.get_node("price_num"..i), skins_cost[i])
		end]]
		
		for i = 1, #skins.names do
			if skins.shop[i] then
				if skins.type == i then
					gui.set_text(gui.get_node("price_text"..i), "Selected")
				else
					gui.set_text(gui.get_node("price_text"..i), "Select")
				end
			else
				gui.set_text(gui.get_node("price_text"..i), localization.shop.price[language_state].." "..skins.cost[i])
			end
		end
		gui.set_text(gui.get_node("donate_text"), localization.shop.donate[language_state])
		gui.set_text(gui.get_node("back_text"), localization.shop.back[language_state])
		
		gui.set_enabled(gui.get_node("background"), true)
		gui.set_enabled(gui.get_node("donate_window"), false)

		gui.set_text(gui.get_node("coins_num"), coins)
		gui.set_text(gui.get_node("diamonds_num"), diamonds)

		gui.animate(gui.get_node("background"), "position.y", 640, gui.EASING_INCUBIC, 0.5, 0, nil, gui.PLAYBACK_ONCE_BACKWARD)

		if in_game then
			msg.post(".", "acquire_input_focus")
		end

		if gui_log then
			print("Пришло сообщение о включении экрана магазина от", sender, "Показан экран магазина")
		end
	end
	if message_id == hash("hide") then
		gui.animate(gui.get_node("background"), "position.y", -450, gui.EASING_INCUBIC, 0.5, 0, gui.PLAYBACK_ONCE_FORWARD)

		if gui.is_enabled(gui.get_node("background")) then
			gui.set_enabled(gui.get_node("background"), true)

			if not in_game then
				msg.post("/menu#main_menu", "show")
			end

			msg.post(".", "release_input_focus")

			if gui_log then
				print("Нажата кнопка закрытия окна, окно магазина закрыто")
			end
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("back_clicked") then
		--finish_anim(gui.get_node("background"))
		msg.post(".", "hide")
	end
	if action_id == hash("click") or action_id == hash("touch") then

		if action.pressed then
			handle_press(self, action.x, action.y)
		end
		if action.released then
			handle_click(self, action.x, action.y)
		end
	end

	--handle_hover(self, action.x, action.y)

	return true
end