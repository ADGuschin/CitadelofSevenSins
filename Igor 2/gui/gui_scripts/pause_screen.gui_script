function init(self)
	-- Fetch background node and disable it.
	-- Everything is childed under it.
	local node = gui.get_node("background")
	gui.set_enabled(node, false)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		-- First, show the pause menu.
		local node = gui.get_node("background")
		gui.set_enabled(node, true)

		-- Now, acquire input. We're gonna be on top of
		-- the input stack. Yay!
		msg.post(".", "acquire_input_focus")
	end
end

function on_input(self, action_id, action)
	if action_id == hash("click") and action.pressed then
		local x = action.x
		local y = action.y
		
		local resumenode = gui.get_node("resume")
		local menunode = gui.get_node("menu")
		
		if gui.pick_node(resumenode, x, y) then
			local node = gui.get_node("background")
			gui.set_enabled(node, false)
			
			msg.post(".", "release_input_focus")
			msg.post("/score_hud", "resume")
		elseif gui.pick_node(menunode, x, y) then
			--msg.post("@system:", "exit", {code = 0})
			
			local node = gui.get_node("background")
			gui.set_enabled(node, false)
			
			msg.post("start_scene:/collection_proxy_controller", "load", {proxy = "#main_menu_proxy"})
		end
	elseif action_id == hash("unpause") then
		local node = gui.get_node("background")
		gui.set_enabled(node, false)
		
		msg.post(".", "release_input_focus")
		msg.post("/score_hud", "resume")
	end

	-- As long as we're listening to input, we're gonna consume it.
	-- This disables game controls while the pause menu is showing.
	return true
end