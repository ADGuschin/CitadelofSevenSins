require "main_menu.ui_func"
require "main.global_variables"
--autorestart_state = false

function init(self)
	local node = gui.get_node("background")
	gui.set_enabled(node, false)

	self.hovered_node = nil
	self.picked_node = nil

	self.nodes = {
		{
			node = gui.get_node("sound_button"),
			action = function ()
				if sound_off then 
					msg.post("start_scene:/sound#sound", "soundon_but")
					gui.play_flipbook(gui.get_node("sound_button"), "Volume_up_font_awesome.svg")
				else
					msg.post("start_scene:/sound#sound", "soundoff_but")
					gui.play_flipbook(gui.get_node("sound_button"), "1600")
				end
			end
		},
		{
			node = gui.get_node("close_button"),
			action = function () 
				local node = gui.get_node("background")
				gui.set_enabled(node, false)
				msg.post(".", "release_input_focus")
				msg.post("/menu#main_menu", "show")
				msg.post("death_screen#death_screen", "show")
			end
		},
		{
			node = gui.get_node("autorestart_button"),
			action = function () 
				if autorestart_state then
					gui.set_text(gui.get_node("autorestart_state"), "no")
					autorestart_state = false 
				else
					gui.set_text(gui.get_node("autorestart_state"), "yes")
					autorestart_state = true 
				end
			end
		},
	}

	init_ui(self)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		local node = gui.get_node("background")
		gui.set_enabled(node, true)
		
		if sound_off then
			gui.play_flipbook(gui.get_node("sound_button"), "1600")
		else
			gui.play_flipbook(gui.get_node("sound_button"), "Volume_up_font_awesome.svg")
		end

		if autorestart_state then
			gui.set_text(gui.get_node("autorestart_state"), "yes")
		else
			gui.set_text(gui.get_node("autorestart_state"), "no")
		end
		
		msg.post(".", "acquire_input_focus")
	end
end

function on_input(self, action_id, action)
	if action_id == hash("click") or action_id == hash("touch") then

		if action.pressed then
			handle_press(self, action.x, action.y)
		end
		if action.released then
			handle_click(self, action.x, action.y)
		end
	end

	handle_hover(self, action.x, action.y)

	return true
end