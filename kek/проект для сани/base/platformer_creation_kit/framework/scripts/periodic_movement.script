go.property("amplitude_x", 100)
go.property("amplitude_y", 100)
go.property("frequency_x", 1)
go.property("frequency_y", 1)
go.property("start_on_awake", true)
go.property("start_delay", 0)

function init(self)
	if self.start_on_awake then
	    start_movement(self)
    end
end

function update(self, dt)
	if self.start_delay > 0 then
		self.start_delay = self.start_delay - dt
		if self.start_delay <= 0 then
			start_movement(self)
		end	
	end
end

function start_movement(self)
	--go.set_position(go.get_position() + vmath.vector3(self.amplitude_x, self.amplitude_y, 0))
    if self.frequency_x == 0 then
    	self.frequency_x = 0.001
    end
    if self.frequency_y == 0 then
    	self.frequency_y = 0.001
    end
    go.animate(go.get_id(), "position.x", go.PLAYBACK_LOOP_PINGPONG, go.get_position().x - 2*self.amplitude_x, go.EASING_INOUTSINE, 1 / self.frequency_x, math.random())
    go.animate(go.get_id(), "position.y", go.PLAYBACK_LOOP_PINGPONG, go.get_position().y - 2*self.amplitude_y, go.EASING_INOUTSINE, 1 / self.frequency_y, math.random())
end