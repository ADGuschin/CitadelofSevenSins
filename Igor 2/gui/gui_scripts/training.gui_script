require "main_menu.ui_func"

local wait_for_roll = false
local wait_for_jump = false
local wait_for_slide = false

function init(self)
	gui.set_enabled(gui.get_node("background"), false)
	
	self.hovered_node = nil
	self.picked_node = nil
	--init_ui(self)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function go_away(self)
	pause_state = false
	gui.set_enabled(gui.get_node("background"), false)
	msg.post("default:/hud#level_proxy", "set_time_step", {factor = 1, mode = 1})
	wait_for_roll = false
	wait_for_jump = false
	wait_for_slide = false
end

function on_message(self, message_id, message, sender)
	if message_id == hash("swipe_right") then
		pause_state = true
		gui.set_enabled(gui.get_node("background"), true)
		gui.play_flipbook(gui.get_node("hint"), "swipe_right")
		msg.post("default:/hud#level_proxy", "set_time_step", {factor = 0, mode = 1})
		wait_for_roll = true
	elseif message_id == hash("swipe_up") then
		--print("pause_state"..pause_state)
		pause_state = true
		gui.set_enabled(gui.get_node("background"), true)
		gui.play_flipbook(gui.get_node("hint"), "swipe_up")
		msg.post("default:/hud#level_proxy", "set_time_step", {factor = 0, mode = 1})
		wait_for_jump = true
	elseif message_id == hash("swipe_down") then
		pause_state = true
		gui.set_enabled(gui.get_node("background"), true)
		gui.play_flipbook(gui.get_node("hint"), "swipe_down")
		msg.post("default:/hud#level_proxy", "set_time_step", {factor = 0, mode = 1})
		wait_for_slide = true
	elseif message_id == hash("jump") and wait_for_jump then
		go_away(self)
	elseif message_id == hash("roll") and wait_for_roll then
		go_away(self)
	elseif message_id == hash("slide") and wait_for_slide then
		go_away(self)
	end
end

