local save_file = sys.get_save_file("Citadel of seven sins", "gamedata")

shared_data = {
	player = {
		highscore = 0,
		score = 0
	}
}

record_state = false

function init(self)
	load_gamedata()
	
	if gui_log then
		print("Итерфейс счета проинициализирован, загружена геймдата")
	end
end

function final(self)
	save_gamedata()
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("score") then
		local score = message.value
		gui.set_text(gui.get_node("score_num"), score)
		gui.set_text(gui.get_node("highscore_num"), shared_data.player.highscore)
		
		shared_data.player.score = score
		if score > shared_data.player.highscore then
			shared_data.player.highscore = score
			record_state = true
			--print(shared_data.player.highscore)
		end

		--[[if gui_log then
			print("Пришло сообщение о счете от", sender, "Счет выведен на экран")
		end]]
	elseif message_id == hash("show") then
		gui.set_enabled(gui.get_node("score_box"), true)

		if gui_log then
			print("Пришло сообщение о включении интерфейса очков от", sender, "Интерфейс показан")
		end
	elseif message_id == hash("hide") then
		gui.set_enabled(gui.get_node("score_box"), false)
		
		if gui_log then
			print("Пришло сообщение о скрытии интерфейса очков от", sender, "Интерфейс скрыт")
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end

---------------------------------------------------

function save_gamedata(self)
	-- Save gamedata
	if not sys.save(save_file, shared_data) then
		print("Gamedata isn't saved")
	end
end

function load_gamedata(self)
	--	Load gamedata
	local gamedata = sys.load(save_file)

	if next(gamedata) then
		pprint(gamedata)
		shared_data.player.highscore = gamedata.player.highscore
	else
		print("Gamedata is empty")
		sys.save(save_file, shared_data)
	end
end