go.property("follow_horizontally", true)
go.property("follow_vertically", true)
go.property("render_scale", 0.1)
go.property("offset_x", 0)
go.property("offset_y", 100)
go.property("face_forward", true)
go.property("fixed_position", false)
go.property("initial_fixed_position", vmath.vector3(0,0,0))

local screen_width
local screen_height

function init(self)
	-- Add initialization code here
	-- Remove this function if not needed
	msg.post("#camera", "acquire_camera_focus")
	screen_width = tonumber(sys.get_config("display.width"))
	screen_height = tonumber(sys.get_config("display.height"))
	msg.post("@render:", "set_render_scale", {value = self.render_scale})
	--msg.post("speech_controller#script", "set_render_scale", {value = self.render_scale})
	self.current_offset = 0
	self.lerp_dir = 1;
	if self.fixed_position then
		go.set_position(self.initial_fixed_position)
	end
	self.target_position = go.get_position() 
end

function update(self, dt)
	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("watch_to_hero") then
		local camera_position = go.get_position()
		
		camera_position.x = message.pos.x - 300 --что бы камера была не в игроке, а на позиции где всегда, для игрика(ось y, а не игрока) нужно отнимать 182
		go.set_position(camera_position)
	end

end
